-- Copyright (C) 1991-2008 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--C1_Q[0] is nBitRegister:XOffsetReg|Q[0] at LCFF_X42_Y24_N15
C1_Q[0] = DFFEAS(C1L3, GLOBAL(A1L91),  ,  ,  ,  ,  , A1L148,  );


--N1_result[0] is lpm_mult:Mult2|mult_6s01:auto_generated|result[0] at DSPOUT_X39_Y23_N2
--DSP Block Operation Mode: Simple Multiplier (9-bit)
N1_result[0] = N1_mac_mult1;

--N1_result[1] is lpm_mult:Mult2|mult_6s01:auto_generated|result[1] at DSPOUT_X39_Y23_N2
N1_result[1] = N1L7;

--N1_result[2] is lpm_mult:Mult2|mult_6s01:auto_generated|result[2] at DSPOUT_X39_Y23_N2
N1_result[2] = N1L8;

--N1_result[3] is lpm_mult:Mult2|mult_6s01:auto_generated|result[3] at DSPOUT_X39_Y23_N2
N1_result[3] = N1L9;

--N1_result[4] is lpm_mult:Mult2|mult_6s01:auto_generated|result[4] at DSPOUT_X39_Y23_N2
N1_result[4] = N1L10;

--N1_result[5] is lpm_mult:Mult2|mult_6s01:auto_generated|result[5] at DSPOUT_X39_Y23_N2
N1_result[5] = N1L11;

--N1_result[6] is lpm_mult:Mult2|mult_6s01:auto_generated|result[6] at DSPOUT_X39_Y23_N2
N1_result[6] = N1L12;

--N1_result[7] is lpm_mult:Mult2|mult_6s01:auto_generated|result[7] at DSPOUT_X39_Y23_N2
N1_result[7] = N1L13;

--N1_result[8] is lpm_mult:Mult2|mult_6s01:auto_generated|result[8] at DSPOUT_X39_Y23_N2
N1_result[8] = N1L14;

--N1_result[9] is lpm_mult:Mult2|mult_6s01:auto_generated|result[9] at DSPOUT_X39_Y23_N2
N1_result[9] = N1L15;

--N1_result[10] is lpm_mult:Mult2|mult_6s01:auto_generated|result[10] at DSPOUT_X39_Y23_N2
N1_result[10] = N1L16;

--N1_result[11] is lpm_mult:Mult2|mult_6s01:auto_generated|result[11] at DSPOUT_X39_Y23_N2
N1_result[11] = N1L17;


--F1_result[0] is lpm_mult:Mult0|mult_4s01:auto_generated|result[0] at DSPOUT_X39_Y23_N3
--DSP Block Operation Mode: Simple Multiplier (9-bit)
F1_result[0] = F1_mac_mult1;

--F1_result[1] is lpm_mult:Mult0|mult_4s01:auto_generated|result[1] at DSPOUT_X39_Y23_N3
F1_result[1] = F1L10;

--F1_result[2] is lpm_mult:Mult0|mult_4s01:auto_generated|result[2] at DSPOUT_X39_Y23_N3
F1_result[2] = F1L11;

--F1_result[3] is lpm_mult:Mult0|mult_4s01:auto_generated|result[3] at DSPOUT_X39_Y23_N3
F1_result[3] = F1L12;

--F1_result[4] is lpm_mult:Mult0|mult_4s01:auto_generated|result[4] at DSPOUT_X39_Y23_N3
F1_result[4] = F1L13;

--F1_result[5] is lpm_mult:Mult0|mult_4s01:auto_generated|result[5] at DSPOUT_X39_Y23_N3
F1_result[5] = F1L14;

--F1_result[6] is lpm_mult:Mult0|mult_4s01:auto_generated|result[6] at DSPOUT_X39_Y23_N3
F1_result[6] = F1L15;

--F1_result[7] is lpm_mult:Mult0|mult_4s01:auto_generated|result[7] at DSPOUT_X39_Y23_N3
F1_result[7] = F1L16;

--F1_result[8] is lpm_mult:Mult0|mult_4s01:auto_generated|result[8] at DSPOUT_X39_Y23_N3
F1_result[8] = F1L17;

--F1_result[9] is lpm_mult:Mult0|mult_4s01:auto_generated|result[9] at DSPOUT_X39_Y23_N3
F1_result[9] = F1L18;

--F1_result[10] is lpm_mult:Mult0|mult_4s01:auto_generated|result[10] at DSPOUT_X39_Y23_N3
F1_result[10] = F1L19;

--F1_result[11] is lpm_mult:Mult0|mult_4s01:auto_generated|result[11] at DSPOUT_X39_Y23_N3
F1_result[11] = F1L20;


--A1L1 is Add0~144 at LCCOMB_X38_Y23_N2
A1L1 = N1_result[0] & (F1_result[0] $ VCC) # !N1_result[0] & F1_result[0] & VCC;

--A1L2 is Add0~145 at LCCOMB_X38_Y23_N2
A1L2 = CARRY(N1_result[0] & F1_result[0]);


--A1L25 is Add1~144 at LCCOMB_X43_Y24_N6
A1L25 = C1_Q[0] & (A1L1 $ VCC) # !C1_Q[0] & A1L1 & VCC;

--A1L26 is Add1~145 at LCCOMB_X43_Y24_N6
A1L26 = CARRY(C1_Q[0] & A1L1);


--C1_Q[1] is nBitRegister:XOffsetReg|Q[1] at LCFF_X42_Y24_N17
C1_Q[1] = DFFEAS(C1L6, GLOBAL(A1L91),  ,  ,  ,  ,  , A1L148,  );


--A1L3 is Add0~146 at LCCOMB_X38_Y23_N4
A1L3 = F1_result[1] & (N1_result[1] & A1L2 & VCC # !N1_result[1] & !A1L2) # !F1_result[1] & (N1_result[1] & !A1L2 # !N1_result[1] & (A1L2 # GND));

--A1L4 is Add0~147 at LCCOMB_X38_Y23_N4
A1L4 = CARRY(F1_result[1] & !N1_result[1] & !A1L2 # !F1_result[1] & (!A1L2 # !N1_result[1]));


--A1L27 is Add1~146 at LCCOMB_X43_Y24_N8
A1L27 = A1L3 & (C1_Q[1] & A1L26 & VCC # !C1_Q[1] & !A1L26) # !A1L3 & (C1_Q[1] & !A1L26 # !C1_Q[1] & (A1L26 # GND));

--A1L28 is Add1~147 at LCCOMB_X43_Y24_N8
A1L28 = CARRY(A1L3 & !C1_Q[1] & !A1L26 # !A1L3 & (!A1L26 # !C1_Q[1]));


--C1_Q[2] is nBitRegister:XOffsetReg|Q[2] at LCFF_X42_Y24_N19
C1_Q[2] = DFFEAS(C1L9, GLOBAL(A1L91),  ,  ,  ,  ,  , A1L148,  );


--A1L5 is Add0~148 at LCCOMB_X38_Y23_N6
A1L5 = (N1_result[2] $ F1_result[2] $ !A1L4) # GND;

--A1L6 is Add0~149 at LCCOMB_X38_Y23_N6
A1L6 = CARRY(N1_result[2] & (F1_result[2] # !A1L4) # !N1_result[2] & F1_result[2] & !A1L4);


--A1L29 is Add1~148 at LCCOMB_X43_Y24_N10
A1L29 = (A1L5 $ C1_Q[2] $ !A1L28) # GND;

--A1L30 is Add1~149 at LCCOMB_X43_Y24_N10
A1L30 = CARRY(A1L5 & (C1_Q[2] # !A1L28) # !A1L5 & C1_Q[2] & !A1L28);


--C1_Q[3] is nBitRegister:XOffsetReg|Q[3] at LCFF_X42_Y24_N21
C1_Q[3] = DFFEAS(C1L12, GLOBAL(A1L91),  ,  ,  ,  ,  , A1L148,  );


--A1L7 is Add0~150 at LCCOMB_X38_Y23_N8
A1L7 = N1_result[3] & (F1_result[3] & A1L6 & VCC # !F1_result[3] & !A1L6) # !N1_result[3] & (F1_result[3] & !A1L6 # !F1_result[3] & (A1L6 # GND));

--A1L8 is Add0~151 at LCCOMB_X38_Y23_N8
A1L8 = CARRY(N1_result[3] & !F1_result[3] & !A1L6 # !N1_result[3] & (!A1L6 # !F1_result[3]));


--A1L31 is Add1~150 at LCCOMB_X43_Y24_N12
A1L31 = C1_Q[3] & (A1L7 & A1L30 & VCC # !A1L7 & !A1L30) # !C1_Q[3] & (A1L7 & !A1L30 # !A1L7 & (A1L30 # GND));

--A1L32 is Add1~151 at LCCOMB_X43_Y24_N12
A1L32 = CARRY(C1_Q[3] & !A1L7 & !A1L30 # !C1_Q[3] & (!A1L30 # !A1L7));


--C1_Q[4] is nBitRegister:XOffsetReg|Q[4] at LCFF_X42_Y24_N23
C1_Q[4] = DFFEAS(C1L15, GLOBAL(A1L91),  ,  ,  ,  ,  , A1L148,  );


--A1L9 is Add0~152 at LCCOMB_X38_Y23_N10
A1L9 = (F1_result[4] $ N1_result[4] $ !A1L8) # GND;

--A1L10 is Add0~153 at LCCOMB_X38_Y23_N10
A1L10 = CARRY(F1_result[4] & (N1_result[4] # !A1L8) # !F1_result[4] & N1_result[4] & !A1L8);


--A1L33 is Add1~152 at LCCOMB_X43_Y24_N14
A1L33 = (A1L9 $ C1_Q[4] $ !A1L32) # GND;

--A1L34 is Add1~153 at LCCOMB_X43_Y24_N14
A1L34 = CARRY(A1L9 & (C1_Q[4] # !A1L32) # !A1L9 & C1_Q[4] & !A1L32);


--C1_Q[5] is nBitRegister:XOffsetReg|Q[5] at LCFF_X42_Y24_N25
C1_Q[5] = DFFEAS(C1L18, GLOBAL(A1L91),  ,  ,  ,  ,  , A1L148,  );


--A1L11 is Add0~154 at LCCOMB_X38_Y23_N12
A1L11 = N1_result[5] & (F1_result[5] & A1L10 & VCC # !F1_result[5] & !A1L10) # !N1_result[5] & (F1_result[5] & !A1L10 # !F1_result[5] & (A1L10 # GND));

--A1L12 is Add0~155 at LCCOMB_X38_Y23_N12
A1L12 = CARRY(N1_result[5] & !F1_result[5] & !A1L10 # !N1_result[5] & (!A1L10 # !F1_result[5]));


--A1L35 is Add1~154 at LCCOMB_X43_Y24_N16
A1L35 = A1L11 & (C1_Q[5] & A1L34 & VCC # !C1_Q[5] & !A1L34) # !A1L11 & (C1_Q[5] & !A1L34 # !C1_Q[5] & (A1L34 # GND));

--A1L36 is Add1~155 at LCCOMB_X43_Y24_N16
A1L36 = CARRY(A1L11 & !C1_Q[5] & !A1L34 # !A1L11 & (!A1L34 # !C1_Q[5]));


--C1_Q[6] is nBitRegister:XOffsetReg|Q[6] at LCFF_X42_Y24_N27
C1_Q[6] = DFFEAS(C1L21, GLOBAL(A1L91),  ,  ,  ,  ,  , A1L148,  );


--A1L13 is Add0~156 at LCCOMB_X38_Y23_N14
A1L13 = (F1_result[6] $ N1_result[6] $ !A1L12) # GND;

--A1L14 is Add0~157 at LCCOMB_X38_Y23_N14
A1L14 = CARRY(F1_result[6] & (N1_result[6] # !A1L12) # !F1_result[6] & N1_result[6] & !A1L12);


--A1L37 is Add1~156 at LCCOMB_X43_Y24_N18
A1L37 = (A1L13 $ C1_Q[6] $ !A1L36) # GND;

--A1L38 is Add1~157 at LCCOMB_X43_Y24_N18
A1L38 = CARRY(A1L13 & (C1_Q[6] # !A1L36) # !A1L13 & C1_Q[6] & !A1L36);


--C1_Q[7] is nBitRegister:XOffsetReg|Q[7] at LCFF_X42_Y24_N29
C1_Q[7] = DFFEAS(C1L24, GLOBAL(A1L91),  ,  ,  ,  ,  , A1L148,  );


--A1L15 is Add0~158 at LCCOMB_X38_Y23_N16
A1L15 = N1_result[7] & (F1_result[7] & A1L14 & VCC # !F1_result[7] & !A1L14) # !N1_result[7] & (F1_result[7] & !A1L14 # !F1_result[7] & (A1L14 # GND));

--A1L16 is Add0~159 at LCCOMB_X38_Y23_N16
A1L16 = CARRY(N1_result[7] & !F1_result[7] & !A1L14 # !N1_result[7] & (!A1L14 # !F1_result[7]));


--A1L39 is Add1~158 at LCCOMB_X43_Y24_N20
A1L39 = A1L15 & (C1_Q[7] & A1L38 & VCC # !C1_Q[7] & !A1L38) # !A1L15 & (C1_Q[7] & !A1L38 # !C1_Q[7] & (A1L38 # GND));

--A1L40 is Add1~159 at LCCOMB_X43_Y24_N20
A1L40 = CARRY(A1L15 & !C1_Q[7] & !A1L38 # !A1L15 & (!A1L38 # !C1_Q[7]));


--A1L17 is Add0~160 at LCCOMB_X38_Y23_N18
A1L17 = (F1_result[8] $ N1_result[8] $ !A1L16) # GND;

--A1L18 is Add0~161 at LCCOMB_X38_Y23_N18
A1L18 = CARRY(F1_result[8] & (N1_result[8] # !A1L16) # !F1_result[8] & N1_result[8] & !A1L16);


--A1L41 is Add1~160 at LCCOMB_X43_Y24_N22
A1L41 = A1L17 & (A1L40 $ GND) # !A1L17 & !A1L40 & VCC;

--A1L42 is Add1~161 at LCCOMB_X43_Y24_N22
A1L42 = CARRY(A1L17 & !A1L40);


--A1L19 is Add0~162 at LCCOMB_X38_Y23_N20
A1L19 = F1_result[9] & (N1_result[9] & A1L18 & VCC # !N1_result[9] & !A1L18) # !F1_result[9] & (N1_result[9] & !A1L18 # !N1_result[9] & (A1L18 # GND));

--A1L20 is Add0~163 at LCCOMB_X38_Y23_N20
A1L20 = CARRY(F1_result[9] & !N1_result[9] & !A1L18 # !F1_result[9] & (!A1L18 # !N1_result[9]));


--A1L43 is Add1~162 at LCCOMB_X43_Y24_N24
A1L43 = A1L19 & !A1L42 # !A1L19 & (A1L42 # GND);

--A1L44 is Add1~163 at LCCOMB_X43_Y24_N24
A1L44 = CARRY(!A1L42 # !A1L19);


--A1L21 is Add0~164 at LCCOMB_X38_Y23_N22
A1L21 = (F1_result[10] $ N1_result[10] $ !A1L20) # GND;

--A1L22 is Add0~165 at LCCOMB_X38_Y23_N22
A1L22 = CARRY(F1_result[10] & (N1_result[10] # !A1L20) # !F1_result[10] & N1_result[10] & !A1L20);


--A1L45 is Add1~164 at LCCOMB_X43_Y24_N26
A1L45 = A1L21 & (A1L44 $ GND) # !A1L21 & !A1L44 & VCC;

--A1L46 is Add1~165 at LCCOMB_X43_Y24_N26
A1L46 = CARRY(A1L21 & !A1L44);


--A1L23 is Add0~166 at LCCOMB_X38_Y23_N24
A1L23 = F1_result[11] $ A1L22 $ N1_result[11];


--A1L47 is Add1~166 at LCCOMB_X43_Y24_N28
A1L47 = A1L23 $ A1L46;


--P2L1 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~104 at LCCOMB_X46_Y24_N12
P2L1 = C1_Q[0] & (Xin[0] $ VCC) # !C1_Q[0] & Xin[0] & VCC;

--P2L2 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~105 at LCCOMB_X46_Y24_N12
P2L2 = CARRY(C1_Q[0] & Xin[0]);


--P2L3 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~106 at LCCOMB_X46_Y24_N14
P2L3 = C1_Q[1] & (Xin[1] & P2L2 & VCC # !Xin[1] & !P2L2) # !C1_Q[1] & (Xin[1] & !P2L2 # !Xin[1] & (P2L2 # GND));

--P2L4 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~107 at LCCOMB_X46_Y24_N14
P2L4 = CARRY(C1_Q[1] & !Xin[1] & !P2L2 # !C1_Q[1] & (!P2L2 # !Xin[1]));


--P2L5 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~108 at LCCOMB_X46_Y24_N16
P2L5 = (Xin[2] $ C1_Q[2] $ !P2L4) # GND;

--P2L6 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~109 at LCCOMB_X46_Y24_N16
P2L6 = CARRY(Xin[2] & (C1_Q[2] # !P2L4) # !Xin[2] & C1_Q[2] & !P2L4);


--P2L7 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~110 at LCCOMB_X46_Y24_N18
P2L7 = C1_Q[3] & (Xin[3] & P2L6 & VCC # !Xin[3] & !P2L6) # !C1_Q[3] & (Xin[3] & !P2L6 # !Xin[3] & (P2L6 # GND));

--P2L8 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~111 at LCCOMB_X46_Y24_N18
P2L8 = CARRY(C1_Q[3] & !Xin[3] & !P2L6 # !C1_Q[3] & (!P2L6 # !Xin[3]));


--P2L9 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~112 at LCCOMB_X46_Y24_N20
P2L9 = (Xin[4] $ C1_Q[4] $ !P2L8) # GND;

--P2L10 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~113 at LCCOMB_X46_Y24_N20
P2L10 = CARRY(Xin[4] & (C1_Q[4] # !P2L8) # !Xin[4] & C1_Q[4] & !P2L8);


--P2L11 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~114 at LCCOMB_X46_Y24_N22
P2L11 = C1_Q[5] & (Xin[5] & P2L10 & VCC # !Xin[5] & !P2L10) # !C1_Q[5] & (Xin[5] & !P2L10 # !Xin[5] & (P2L10 # GND));

--P2L12 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~115 at LCCOMB_X46_Y24_N22
P2L12 = CARRY(C1_Q[5] & !Xin[5] & !P2L10 # !C1_Q[5] & (!P2L10 # !Xin[5]));


--P2L13 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~116 at LCCOMB_X46_Y24_N24
P2L13 = (C1_Q[6] $ Xin[6] $ !P2L12) # GND;

--P2L14 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~117 at LCCOMB_X46_Y24_N24
P2L14 = CARRY(C1_Q[6] & (Xin[6] # !P2L12) # !C1_Q[6] & Xin[6] & !P2L12);


--P2L15 is addx:XoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_big:auto_generated|op_1~118 at LCCOMB_X46_Y24_N26
P2L15 = C1_Q[7] $ P2L14 $ Xin[7];


--C2L6Q is nBitRegister:YOffsetReg|Q[0]~_Duplicate_1 at LCFF_X40_Y23_N9
C2L6Q = DFFEAS(C2L5, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--Q2L1 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~91 at LCCOMB_X44_Y20_N4
Q2L1 = C2L6Q & (Yin[0] $ VCC) # !C2L6Q & Yin[0] & VCC;

--Q2L2 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~92 at LCCOMB_X44_Y20_N4
Q2L2 = CARRY(C2L6Q & Yin[0]);


--C2L11Q is nBitRegister:YOffsetReg|Q[1]~_Duplicate_1 at LCFF_X40_Y23_N3
C2L11Q = DFFEAS(C2L10, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--Q2L3 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~93 at LCCOMB_X44_Y20_N6
Q2L3 = C2L11Q & (Yin[1] & Q2L2 & VCC # !Yin[1] & !Q2L2) # !C2L11Q & (Yin[1] & !Q2L2 # !Yin[1] & (Q2L2 # GND));

--Q2L4 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~94 at LCCOMB_X44_Y20_N6
Q2L4 = CARRY(C2L11Q & !Yin[1] & !Q2L2 # !C2L11Q & (!Q2L2 # !Yin[1]));


--C2L16Q is nBitRegister:YOffsetReg|Q[2]~_Duplicate_1 at LCFF_X40_Y23_N5
C2L16Q = DFFEAS(C2L15, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--Q2L5 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~95 at LCCOMB_X44_Y20_N8
Q2L5 = (C2L16Q $ Yin[2] $ !Q2L4) # GND;

--Q2L6 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~96 at LCCOMB_X44_Y20_N8
Q2L6 = CARRY(C2L16Q & (Yin[2] # !Q2L4) # !C2L16Q & Yin[2] & !Q2L4);


--C2L21Q is nBitRegister:YOffsetReg|Q[3]~_Duplicate_1 at LCFF_X40_Y23_N15
C2L21Q = DFFEAS(C2L20, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--Q2L7 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~97 at LCCOMB_X44_Y20_N10
Q2L7 = C2L21Q & (Yin[3] & Q2L6 & VCC # !Yin[3] & !Q2L6) # !C2L21Q & (Yin[3] & !Q2L6 # !Yin[3] & (Q2L6 # GND));

--Q2L8 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~98 at LCCOMB_X44_Y20_N10
Q2L8 = CARRY(C2L21Q & !Yin[3] & !Q2L6 # !C2L21Q & (!Q2L6 # !Yin[3]));


--C2L26Q is nBitRegister:YOffsetReg|Q[4]~_Duplicate_1 at LCFF_X40_Y23_N17
C2L26Q = DFFEAS(C2L25, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--Q2L9 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~99 at LCCOMB_X44_Y20_N12
Q2L9 = (C2L26Q $ Yin[4] $ !Q2L8) # GND;

--Q2L10 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~100 at LCCOMB_X44_Y20_N12
Q2L10 = CARRY(C2L26Q & (Yin[4] # !Q2L8) # !C2L26Q & Yin[4] & !Q2L8);


--C2L31Q is nBitRegister:YOffsetReg|Q[5]~_Duplicate_1 at LCFF_X40_Y23_N11
C2L31Q = DFFEAS(C2L30, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--Q2L11 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~101 at LCCOMB_X44_Y20_N14
Q2L11 = Yin[5] & (C2L31Q & Q2L10 & VCC # !C2L31Q & !Q2L10) # !Yin[5] & (C2L31Q & !Q2L10 # !C2L31Q & (Q2L10 # GND));

--Q2L12 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~102 at LCCOMB_X44_Y20_N14
Q2L12 = CARRY(Yin[5] & !C2L31Q & !Q2L10 # !Yin[5] & (!Q2L10 # !C2L31Q));


--C2L36Q is nBitRegister:YOffsetReg|Q[6]~_Duplicate_1 at LCFF_X40_Y23_N13
C2L36Q = DFFEAS(C2L35, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--Q2L13 is addy:YoutAdder|lpm_add_sub:lpm_add_sub_component|add_sub_aig:auto_generated|op_1~103 at LCCOMB_X44_Y20_N16
Q2L13 = C2L36Q $ Q2L12 $ !Yin[6];


--C1L3 is nBitRegister:XOffsetReg|Q[0]~90 at LCCOMB_X42_Y24_N14
C1L3 = Q.INC_X & (C1_Q[0] $ VCC) # !Q.INC_X & C1_Q[0] & VCC;

--C1L4 is nBitRegister:XOffsetReg|Q[0]~91 at LCCOMB_X42_Y24_N14
C1L4 = CARRY(Q.INC_X & C1_Q[0]);


--N1_mac_mult1 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1 at DSPMULT_X39_Y23_N0
--DSP Block Multiplier Base Width: 9-bits
N1_mac_mult1_a_data = DATA(M1L11, M1L9, M1L7, M1L5, M1L3, M1L1, L1L1, H1_decoder_node[0][0]);
N1_mac_mult1_a_rep = A1L199 ? SIGNED(N1_mac_mult1_a_data) : UNSIGNED(N1_mac_mult1_a_data);
N1_mac_mult1_b_data = DATA(Height[4], Height[3], Height[2], Height[1], Height[0]);
N1_mac_mult1_b_rep = A1L199 ? SIGNED(N1_mac_mult1_b_data) : UNSIGNED(N1_mac_mult1_b_data);
N1_mac_mult1_result = N1_mac_mult1_a_rep * N1_mac_mult1_b_rep;
N1_mac_mult1 = N1_mac_mult1_result[0];

--N1L7 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT1 at DSPMULT_X39_Y23_N0
N1L7 = N1_mac_mult1_result[1];

--N1L8 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT2 at DSPMULT_X39_Y23_N0
N1L8 = N1_mac_mult1_result[2];

--N1L9 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT3 at DSPMULT_X39_Y23_N0
N1L9 = N1_mac_mult1_result[3];

--N1L10 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT4 at DSPMULT_X39_Y23_N0
N1L10 = N1_mac_mult1_result[4];

--N1L11 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT5 at DSPMULT_X39_Y23_N0
N1L11 = N1_mac_mult1_result[5];

--N1L12 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT6 at DSPMULT_X39_Y23_N0
N1L12 = N1_mac_mult1_result[6];

--N1L13 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT7 at DSPMULT_X39_Y23_N0
N1L13 = N1_mac_mult1_result[7];

--N1L14 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT8 at DSPMULT_X39_Y23_N0
N1L14 = N1_mac_mult1_result[8];

--N1L15 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT9 at DSPMULT_X39_Y23_N0
N1L15 = N1_mac_mult1_result[9];

--N1L16 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT10 at DSPMULT_X39_Y23_N0
N1L16 = N1_mac_mult1_result[10];

--N1L17 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT11 at DSPMULT_X39_Y23_N0
N1L17 = N1_mac_mult1_result[11];

--N1L18 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~DATAOUT12 at DSPMULT_X39_Y23_N0
N1L18 = N1_mac_mult1_result[12];

--N1L2 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~0 at DSPMULT_X39_Y23_N0
N1L2 = GND;

--N1L3 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~1 at DSPMULT_X39_Y23_N0
N1L3 = GND;

--N1L4 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~2 at DSPMULT_X39_Y23_N0
N1L4 = GND;

--N1L5 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~3 at DSPMULT_X39_Y23_N0
N1L5 = GND;

--N1L6 is lpm_mult:Mult2|mult_6s01:auto_generated|mac_mult1~4 at DSPMULT_X39_Y23_N0
N1L6 = GND;


--F1_mac_mult1 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1 at DSPMULT_X39_Y23_N1
--DSP Block Multiplier Base Width: 9-bits
F1_mac_mult1_a_data = DATA(C2L35, C2L30, C2L25, C2L20, C2L15, C2L10, C2L5);
F1_mac_mult1_a_reg = DFFE(F1_mac_mult1_a_data, GLOBAL(A1L91), , , );
F1_mac_mult1_a_rep = A1L199 ? SIGNED(F1_mac_mult1_a_reg) : UNSIGNED(F1_mac_mult1_a_reg);
F1_mac_mult1_b_data = DATA(Width[4], Width[3], Width[2], Width[1], Width[0]);
F1_mac_mult1_b_rep = A1L199 ? SIGNED(F1_mac_mult1_b_data) : UNSIGNED(F1_mac_mult1_b_data);
F1_mac_mult1_result = F1_mac_mult1_a_rep * F1_mac_mult1_b_rep;
F1_mac_mult1 = F1_mac_mult1_result[0];

--F1L10 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT1 at DSPMULT_X39_Y23_N1
F1L10 = F1_mac_mult1_result[1];

--F1L11 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT2 at DSPMULT_X39_Y23_N1
F1L11 = F1_mac_mult1_result[2];

--F1L12 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT3 at DSPMULT_X39_Y23_N1
F1L12 = F1_mac_mult1_result[3];

--F1L13 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT4 at DSPMULT_X39_Y23_N1
F1L13 = F1_mac_mult1_result[4];

--F1L14 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT5 at DSPMULT_X39_Y23_N1
F1L14 = F1_mac_mult1_result[5];

--F1L15 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT6 at DSPMULT_X39_Y23_N1
F1L15 = F1_mac_mult1_result[6];

--F1L16 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT7 at DSPMULT_X39_Y23_N1
F1L16 = F1_mac_mult1_result[7];

--F1L17 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT8 at DSPMULT_X39_Y23_N1
F1L17 = F1_mac_mult1_result[8];

--F1L18 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT9 at DSPMULT_X39_Y23_N1
F1L18 = F1_mac_mult1_result[9];

--F1L19 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT10 at DSPMULT_X39_Y23_N1
F1L19 = F1_mac_mult1_result[10];

--F1L20 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~DATAOUT11 at DSPMULT_X39_Y23_N1
F1L20 = F1_mac_mult1_result[11];

--F1L2 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~0 at DSPMULT_X39_Y23_N1
F1L2 = GND;

--F1L3 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~1 at DSPMULT_X39_Y23_N1
F1L3 = GND;

--F1L4 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~2 at DSPMULT_X39_Y23_N1
F1L4 = GND;

--F1L5 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~3 at DSPMULT_X39_Y23_N1
F1L5 = GND;

--F1L6 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~4 at DSPMULT_X39_Y23_N1
F1L6 = GND;

--F1L7 is lpm_mult:Mult0|mult_4s01:auto_generated|mac_mult1~5 at DSPMULT_X39_Y23_N1
F1L7 = GND;


--C1L6 is nBitRegister:XOffsetReg|Q[1]~92 at LCCOMB_X42_Y24_N16
C1L6 = C1_Q[1] & !C1L4 # !C1_Q[1] & (C1L4 # GND);

--C1L7 is nBitRegister:XOffsetReg|Q[1]~93 at LCCOMB_X42_Y24_N16
C1L7 = CARRY(!C1L4 # !C1_Q[1]);


--C1L9 is nBitRegister:XOffsetReg|Q[2]~94 at LCCOMB_X42_Y24_N18
C1L9 = C1_Q[2] & (C1L7 $ GND) # !C1_Q[2] & !C1L7 & VCC;

--C1L10 is nBitRegister:XOffsetReg|Q[2]~95 at LCCOMB_X42_Y24_N18
C1L10 = CARRY(C1_Q[2] & !C1L7);


--C1L12 is nBitRegister:XOffsetReg|Q[3]~96 at LCCOMB_X42_Y24_N20
C1L12 = C1_Q[3] & !C1L10 # !C1_Q[3] & (C1L10 # GND);

--C1L13 is nBitRegister:XOffsetReg|Q[3]~97 at LCCOMB_X42_Y24_N20
C1L13 = CARRY(!C1L10 # !C1_Q[3]);


--C1L15 is nBitRegister:XOffsetReg|Q[4]~98 at LCCOMB_X42_Y24_N22
C1L15 = C1_Q[4] & (C1L13 $ GND) # !C1_Q[4] & !C1L13 & VCC;

--C1L16 is nBitRegister:XOffsetReg|Q[4]~99 at LCCOMB_X42_Y24_N22
C1L16 = CARRY(C1_Q[4] & !C1L13);


--C1L18 is nBitRegister:XOffsetReg|Q[5]~100 at LCCOMB_X42_Y24_N24
C1L18 = C1_Q[5] & !C1L16 # !C1_Q[5] & (C1L16 # GND);

--C1L19 is nBitRegister:XOffsetReg|Q[5]~101 at LCCOMB_X42_Y24_N24
C1L19 = CARRY(!C1L16 # !C1_Q[5]);


--C1L21 is nBitRegister:XOffsetReg|Q[6]~102 at LCCOMB_X42_Y24_N26
C1L21 = C1_Q[6] & (C1L19 $ GND) # !C1_Q[6] & !C1L19 & VCC;

--C1L22 is nBitRegister:XOffsetReg|Q[6]~103 at LCCOMB_X42_Y24_N26
C1L22 = CARRY(C1_Q[6] & !C1L19);


--C1L24 is nBitRegister:XOffsetReg|Q[7]~104 at LCCOMB_X42_Y24_N28
C1L24 = C1L22 $ C1_Q[7];


--C2L3 is nBitRegister:YOffsetReg|Q[0]~79 at LCCOMB_X40_Y23_N18
C2L3 = Q.INC_Y & (C2L6Q $ VCC) # !Q.INC_Y & C2L6Q & VCC;

--C2L4 is nBitRegister:YOffsetReg|Q[0]~80 at LCCOMB_X40_Y23_N18
C2L4 = CARRY(Q.INC_Y & C2L6Q);


--C2L8 is nBitRegister:YOffsetReg|Q[1]~81 at LCCOMB_X40_Y23_N20
C2L8 = C2L11Q & !C2L4 # !C2L11Q & (C2L4 # GND);

--C2L9 is nBitRegister:YOffsetReg|Q[1]~82 at LCCOMB_X40_Y23_N20
C2L9 = CARRY(!C2L4 # !C2L11Q);


--C2L13 is nBitRegister:YOffsetReg|Q[2]~83 at LCCOMB_X40_Y23_N22
C2L13 = C2L16Q & (C2L9 $ GND) # !C2L16Q & !C2L9 & VCC;

--C2L14 is nBitRegister:YOffsetReg|Q[2]~84 at LCCOMB_X40_Y23_N22
C2L14 = CARRY(C2L16Q & !C2L9);


--C2L18 is nBitRegister:YOffsetReg|Q[3]~85 at LCCOMB_X40_Y23_N24
C2L18 = C2L21Q & !C2L14 # !C2L21Q & (C2L14 # GND);

--C2L19 is nBitRegister:YOffsetReg|Q[3]~86 at LCCOMB_X40_Y23_N24
C2L19 = CARRY(!C2L14 # !C2L21Q);


--C2L23 is nBitRegister:YOffsetReg|Q[4]~87 at LCCOMB_X40_Y23_N26
C2L23 = C2L26Q & (C2L19 $ GND) # !C2L26Q & !C2L19 & VCC;

--C2L24 is nBitRegister:YOffsetReg|Q[4]~88 at LCCOMB_X40_Y23_N26
C2L24 = CARRY(C2L26Q & !C2L19);


--C2L28 is nBitRegister:YOffsetReg|Q[5]~89 at LCCOMB_X40_Y23_N28
C2L28 = C2L31Q & !C2L24 # !C2L31Q & (C2L24 # GND);

--C2L29 is nBitRegister:YOffsetReg|Q[5]~90 at LCCOMB_X40_Y23_N28
C2L29 = CARRY(!C2L24 # !C2L31Q);


--C2L33 is nBitRegister:YOffsetReg|Q[6]~91 at LCCOMB_X40_Y23_N30
C2L33 = C2L29 $ !C2L36Q;


--L1L1 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~27 at LCCOMB_X42_Y23_N18
L1L1 = H1_decoder_node[0][1] & (H1_decoder_node[1][0] $ VCC) # !H1_decoder_node[0][1] & H1_decoder_node[1][0] & VCC;

--L1L2 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~28 at LCCOMB_X42_Y23_N18
L1L2 = CARRY(H1_decoder_node[0][1] & H1_decoder_node[1][0]);


--L1L3 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~29 at LCCOMB_X42_Y23_N20
L1L3 = H1_decoder_node[1][1] & (H1_decoder_node[0][2] & L1L2 & VCC # !H1_decoder_node[0][2] & !L1L2) # !H1_decoder_node[1][1] & (H1_decoder_node[0][2] & !L1L2 # !H1_decoder_node[0][2] & (L1L2 # GND));

--L1L4 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~30 at LCCOMB_X42_Y23_N20
L1L4 = CARRY(H1_decoder_node[1][1] & !H1_decoder_node[0][2] & !L1L2 # !H1_decoder_node[1][1] & (!L1L2 # !H1_decoder_node[0][2]));


--M1L1 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~33 at LCCOMB_X41_Y23_N20
M1L1 = L1L3 & (H1_decoder_node[2][0] $ VCC) # !L1L3 & H1_decoder_node[2][0] & VCC;

--M1L2 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~34 at LCCOMB_X41_Y23_N20
M1L2 = CARRY(L1L3 & H1_decoder_node[2][0]);


--L1L5 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~31 at LCCOMB_X42_Y23_N22
L1L5 = (H1_decoder_node[1][2] $ H1_decoder_node[0][3] $ !L1L4) # GND;

--L1L6 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~32 at LCCOMB_X42_Y23_N22
L1L6 = CARRY(H1_decoder_node[1][2] & (H1_decoder_node[0][3] # !L1L4) # !H1_decoder_node[1][2] & H1_decoder_node[0][3] & !L1L4);


--M1L3 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~35 at LCCOMB_X41_Y23_N22
M1L3 = H1_decoder_node[2][1] & (L1L5 & M1L2 & VCC # !L1L5 & !M1L2) # !H1_decoder_node[2][1] & (L1L5 & !M1L2 # !L1L5 & (M1L2 # GND));

--M1L4 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~36 at LCCOMB_X41_Y23_N22
M1L4 = CARRY(H1_decoder_node[2][1] & !L1L5 & !M1L2 # !H1_decoder_node[2][1] & (!M1L2 # !L1L5));


--L1L7 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~33 at LCCOMB_X42_Y23_N24
L1L7 = H1_decoder_node[0][4] & (H1_decoder_node[1][3] & L1L6 & VCC # !H1_decoder_node[1][3] & !L1L6) # !H1_decoder_node[0][4] & (H1_decoder_node[1][3] & !L1L6 # !H1_decoder_node[1][3] & (L1L6 # GND));

--L1L8 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~34 at LCCOMB_X42_Y23_N24
L1L8 = CARRY(H1_decoder_node[0][4] & !H1_decoder_node[1][3] & !L1L6 # !H1_decoder_node[0][4] & (!L1L6 # !H1_decoder_node[1][3]));


--M1L5 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~37 at LCCOMB_X41_Y23_N24
M1L5 = (H1_decoder_node[2][2] $ L1L7 $ !M1L4) # GND;

--M1L6 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~38 at LCCOMB_X41_Y23_N24
M1L6 = CARRY(H1_decoder_node[2][2] & (L1L7 # !M1L4) # !H1_decoder_node[2][2] & L1L7 & !M1L4);


--L1L9 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~35 at LCCOMB_X42_Y23_N26
L1L9 = H1_decoder_node[1][4] & (L1L8 $ GND) # !H1_decoder_node[1][4] & !L1L8 & VCC;

--L1L10 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~36 at LCCOMB_X42_Y23_N26
L1L10 = CARRY(H1_decoder_node[1][4] & !L1L8);


--M1L7 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~39 at LCCOMB_X41_Y23_N26
M1L7 = L1L9 & (H1_decoder_node[2][3] & M1L6 & VCC # !H1_decoder_node[2][3] & !M1L6) # !L1L9 & (H1_decoder_node[2][3] & !M1L6 # !H1_decoder_node[2][3] & (M1L6 # GND));

--M1L8 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~40 at LCCOMB_X41_Y23_N26
M1L8 = CARRY(L1L9 & !H1_decoder_node[2][3] & !M1L6 # !L1L9 & (!M1L6 # !H1_decoder_node[2][3]));


--L1L11 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|lpm_add_sub:adder[0]|add_sub_27h:auto_generated|op_1~37 at LCCOMB_X42_Y23_N28
L1L11 = L1L10;


--M1L9 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~41 at LCCOMB_X41_Y23_N28
M1L9 = (H1_decoder_node[2][4] $ L1L11 $ !M1L8) # GND;

--M1L10 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~42 at LCCOMB_X41_Y23_N28
M1L10 = CARRY(H1_decoder_node[2][4] & (L1L11 # !M1L8) # !H1_decoder_node[2][4] & L1L11 & !M1L8);


--M1L11 is lpm_mult:Mult1|multcore:mult_core|mpar_add:padder|mpar_add:sub_par_add|lpm_add_sub:adder[0]|add_sub_37h:auto_generated|op_1~43 at LCCOMB_X41_Y23_N30
M1L11 = M1L10;


--A1L61 is Add3~78 at LCCOMB_X42_Y24_N0
A1L61 = Width[0] $ VCC;

--A1L62 is Add3~79 at LCCOMB_X42_Y24_N0
A1L62 = CARRY(Width[0]);


--A1L63 is Add3~80 at LCCOMB_X42_Y24_N2
A1L63 = Width[1] & A1L62 & VCC # !Width[1] & !A1L62;

--A1L64 is Add3~81 at LCCOMB_X42_Y24_N2
A1L64 = CARRY(!Width[1] & !A1L62);


--A1L65 is Add3~82 at LCCOMB_X42_Y24_N4
A1L65 = Width[2] & (GND # !A1L64) # !Width[2] & (A1L64 $ GND);

--A1L66 is Add3~83 at LCCOMB_X42_Y24_N4
A1L66 = CARRY(Width[2] # !A1L64);


--A1L67 is Add3~84 at LCCOMB_X42_Y24_N6
A1L67 = Width[3] & A1L66 & VCC # !Width[3] & !A1L66;

--A1L68 is Add3~85 at LCCOMB_X42_Y24_N6
A1L68 = CARRY(!Width[3] & !A1L66);


--A1L69 is Add3~86 at LCCOMB_X42_Y24_N8
A1L69 = Width[4] & (GND # !A1L68) # !Width[4] & (A1L68 $ GND);

--A1L70 is Add3~87 at LCCOMB_X42_Y24_N8
A1L70 = CARRY(Width[4] # !A1L68);


--A1L71 is Add3~88 at LCCOMB_X42_Y24_N10
A1L71 = A1L70;


--A1L49 is Add2~78 at LCCOMB_X40_Y24_N16
A1L49 = Height[0] $ VCC;

--A1L50 is Add2~79 at LCCOMB_X40_Y24_N16
A1L50 = CARRY(Height[0]);


--A1L51 is Add2~80 at LCCOMB_X40_Y24_N18
A1L51 = Height[1] & A1L50 & VCC # !Height[1] & !A1L50;

--A1L52 is Add2~81 at LCCOMB_X40_Y24_N18
A1L52 = CARRY(!Height[1] & !A1L50);


--A1L53 is Add2~82 at LCCOMB_X40_Y24_N20
A1L53 = Height[2] & (GND # !A1L52) # !Height[2] & (A1L52 $ GND);

--A1L54 is Add2~83 at LCCOMB_X40_Y24_N20
A1L54 = CARRY(Height[2] # !A1L52);


--A1L55 is Add2~84 at LCCOMB_X40_Y24_N22
A1L55 = Height[3] & A1L54 & VCC # !Height[3] & !A1L54;

--A1L56 is Add2~85 at LCCOMB_X40_Y24_N22
A1L56 = CARRY(!Height[3] & !A1L54);


--A1L57 is Add2~86 at LCCOMB_X40_Y24_N24
A1L57 = Height[4] & (GND # !A1L56) # !Height[4] & (A1L56 $ GND);

--A1L58 is Add2~87 at LCCOMB_X40_Y24_N24
A1L58 = CARRY(Height[4] # !A1L56);


--A1L59 is Add2~88 at LCCOMB_X40_Y24_N26
A1L59 = A1L58;


--Q.IDLE is Q.IDLE at LCFF_X41_Y24_N1
Q.IDLE = DFFEAS(A1L144, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--Q.DRAW is Q.DRAW at LCFF_X41_Y24_N11
Q.DRAW = DFFEAS(A1L145, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--A1L127 is Equal2~80 at LCCOMB_X35_Y35_N0
A1L127 = DataIn[2] & DataIn[1] & !DataIn[3] & DataIn[0];


--A1L128 is Equal2~81 at LCCOMB_X35_Y35_N2
A1L128 = DataIn[7] & DataIn[6] & !DataIn[5] & !DataIn[4];


--A1L157 is VGA_Draw~9 at LCCOMB_X35_Y35_N12
A1L157 = Q.DRAW & (!A1L127 # !A1L128 # !DataIn[8]);


--Q.INC_X is Q.INC_X at LCFF_X41_Y24_N21
Q.INC_X = DFFEAS(A1L146, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--A1L148 is ResetX~0 at LCCOMB_X41_Y24_N6
A1L148 = !Q.INC_X & !Q.DRAW;


--Q.INC_Y is Q.INC_Y at LCFF_X40_Y23_N7
Q.INC_Y = DFFEAS(A1L147, GLOBAL(A1L91),  ,  ,  ,  ,  ,  ,  );


--Q.000 is Q.000 at LCFF_X41_Y24_N9
Q.000 = DFFEAS(UNCONNECTED_DATAIN, GLOBAL(A1L91),  ,  ,  , Resetn,  ,  , VCC);


--A1L149 is ResetY~0 at LCCOMB_X41_Y24_N8
A1L149 = Q.IDLE # !Q.000;


--A1L144 is Q~67 at LCCOMB_X41_Y24_N0
A1L144 = Resetn & D.IDLE;


--A1L145 is Q~68 at LCCOMB_X41_Y24_N10
A1L145 = Resetn & D.DRAW;


--A1L146 is Q~69 at LCCOMB_X41_Y24_N20
A1L146 = Resetn & D.INC_X;


--A1L147 is Q~70 at LCCOMB_X40_Y23_N6
A1L147 = Resetn & D.INC_Y;


--A1L151 is Selector0~22 at LCCOMB_X42_Y24_N12
A1L151 = Q.IDLE & !Enable # !Q.000;


--A1L122 is Equal1~158 at LCCOMB_X41_Y24_N26
A1L122 = A1L65 & C1_Q[2] & (C1_Q[3] $ !A1L67) # !A1L65 & !C1_Q[2] & (C1_Q[3] $ !A1L67);


--A1L123 is Equal1~159 at LCCOMB_X41_Y24_N4
A1L123 = A1L63 & C1_Q[1] & (A1L69 $ !C1_Q[4]) # !A1L63 & !C1_Q[1] & (A1L69 $ !C1_Q[4]);


--A1L124 is Equal1~160 at LCCOMB_X41_Y24_N22
A1L124 = !C1_Q[6] & !C1_Q[5] & (A1L61 $ !C1_Q[0]);


--A1L125 is Equal1~161 at LCCOMB_X41_Y24_N16
A1L125 = A1L71 & !C1_Q[7];


--A1L126 is Equal1~162 at LCCOMB_X41_Y24_N18
A1L126 = A1L125 & A1L122 & A1L123 & A1L124;


--A1L118 is Equal0~151 at LCCOMB_X41_Y24_N12
A1L118 = C2L16Q & A1L53 & (A1L55 $ !C2L21Q) # !C2L16Q & !A1L53 & (A1L55 $ !C2L21Q);


--A1L119 is Equal0~152 at LCCOMB_X41_Y24_N14
A1L119 = C2L11Q & A1L51 & (C2L26Q $ !A1L57) # !C2L11Q & !A1L51 & (C2L26Q $ !A1L57);


--A1L120 is Equal0~153 at LCCOMB_X41_Y24_N24
A1L120 = !C2L31Q & !C2L36Q & (C2L6Q $ !A1L49);


--A1L121 is Equal0~154 at LCCOMB_X41_Y24_N2
A1L121 = A1L59 & A1L119 & A1L120 & A1L118;


--D.IDLE is D.IDLE at LCCOMB_X41_Y24_N28
D.IDLE = LCELL(A1L151 # Q.DRAW & A1L121 & A1L126);


--D.DRAW is D.DRAW at LCCOMB_X42_Y24_N30
D.DRAW = LCELL(Q.INC_X # Q.INC_Y # Q.IDLE & Enable);


--D.INC_X is D.INC_X at LCCOMB_X41_Y24_N30
D.INC_X = LCELL(Q.DRAW & !A1L126);


--H1_decoder_node[0][0] is lpm_mult:Mult1|multcore:mult_core|decoder_node[0][0] at LCCOMB_X42_Y23_N16
H1_decoder_node[0][0] = LCELL(Width[0] & AnimStep[0]);


--H1_decoder_node[0][1] is lpm_mult:Mult1|multcore:mult_core|decoder_node[0][1] at LCCOMB_X42_Y23_N10
H1_decoder_node[0][1] = LCELL(Width[1] & AnimStep[0]);


--H1_decoder_node[1][0] is lpm_mult:Mult1|multcore:mult_core|decoder_node[1][0] at LCCOMB_X42_Y23_N4
H1_decoder_node[1][0] = LCELL(AnimStep[1] & Width[0]);


--H1_decoder_node[0][2] is lpm_mult:Mult1|multcore:mult_core|decoder_node[0][2] at LCCOMB_X42_Y23_N30
H1_decoder_node[0][2] = LCELL(Width[2] & AnimStep[0]);


--H1_decoder_node[1][1] is lpm_mult:Mult1|multcore:mult_core|decoder_node[1][1] at LCCOMB_X42_Y23_N8
H1_decoder_node[1][1] = LCELL(AnimStep[1] & Width[1]);


--H1_decoder_node[2][0] is lpm_mult:Mult1|multcore:mult_core|decoder_node[2][0] at LCCOMB_X41_Y23_N8
H1_decoder_node[2][0] = LCELL(AnimStep[2] & Width[0]);


--H1_decoder_node[0][3] is lpm_mult:Mult1|multcore:mult_core|decoder_node[0][3] at LCCOMB_X42_Y23_N2
H1_decoder_node[0][3] = LCELL(Width[3] & AnimStep[0]);


--H1_decoder_node[1][2] is lpm_mult:Mult1|multcore:mult_core|decoder_node[1][2] at LCCOMB_X42_Y23_N12
H1_decoder_node[1][2] = LCELL(AnimStep[1] & Width[2]);


--H1_decoder_node[2][1] is lpm_mult:Mult1|multcore:mult_core|decoder_node[2][1] at LCCOMB_X41_Y23_N2
H1_decoder_node[2][1] = LCELL(AnimStep[2] & Width[1]);


--H1_decoder_node[0][4] is lpm_mult:Mult1|multcore:mult_core|decoder_node[0][4] at LCCOMB_X42_Y23_N6
H1_decoder_node[0][4] = LCELL(Width[4] & AnimStep[0]);


--H1_decoder_node[1][3] is lpm_mult:Mult1|multcore:mult_core|decoder_node[1][3] at LCCOMB_X42_Y23_N0
H1_decoder_node[1][3] = LCELL(AnimStep[1] & Width[3]);


--H1_decoder_node[2][2] is lpm_mult:Mult1|multcore:mult_core|decoder_node[2][2] at LCCOMB_X41_Y23_N4
H1_decoder_node[2][2] = LCELL(AnimStep[2] & Width[2]);


--H1_decoder_node[1][4] is lpm_mult:Mult1|multcore:mult_core|decoder_node[1][4] at LCCOMB_X42_Y23_N14
H1_decoder_node[1][4] = LCELL(AnimStep[1] & Width[4]);


--H1_decoder_node[2][3] is lpm_mult:Mult1|multcore:mult_core|decoder_node[2][3] at LCCOMB_X41_Y23_N14
H1_decoder_node[2][3] = LCELL(AnimStep[2] & Width[3]);


--H1_decoder_node[2][4] is lpm_mult:Mult1|multcore:mult_core|decoder_node[2][4] at LCCOMB_X41_Y23_N16
H1_decoder_node[2][4] = LCELL(AnimStep[2] & Width[4]);


--D.INC_Y is D.INC_Y at LCCOMB_X40_Y23_N0
D.INC_Y = LCELL(Q.DRAW & !A1L121 & A1L126);


--A1L199 is ~GND at LCCOMB_X41_Y23_N18
A1L199 = GND;


--MemSel[0] is MemSel[0] at PIN_C9
--operation mode is output

MemSel[0] = OUTPUT(Sprite[0]);


--MemSel[1] is MemSel[1] at PIN_AD10
--operation mode is output

MemSel[1] = OUTPUT(Sprite[1]);


--MemSel[2] is MemSel[2] at PIN_M22
--operation mode is output

MemSel[2] = OUTPUT(Sprite[2]);


--Address[0] is Address[0] at PIN_F15
--operation mode is output

Address[0] = OUTPUT(A1L25);


--Address[1] is Address[1] at PIN_K23
--operation mode is output

Address[1] = OUTPUT(A1L27);


--Address[2] is Address[2] at PIN_A17
--operation mode is output

Address[2] = OUTPUT(A1L29);


--Address[3] is Address[3] at PIN_M23
--operation mode is output

Address[3] = OUTPUT(A1L31);


--Address[4] is Address[4] at PIN_D18
--operation mode is output

Address[4] = OUTPUT(A1L33);


--Address[5] is Address[5] at PIN_D15
--operation mode is output

Address[5] = OUTPUT(A1L35);


--Address[6] is Address[6] at PIN_G17
--operation mode is output

Address[6] = OUTPUT(A1L37);


--Address[7] is Address[7] at PIN_B17
--operation mode is output

Address[7] = OUTPUT(A1L39);


--Address[8] is Address[8] at PIN_G18
--operation mode is output

Address[8] = OUTPUT(A1L41);


--Address[9] is Address[9] at PIN_J17
--operation mode is output

Address[9] = OUTPUT(A1L43);


--Address[10] is Address[10] at PIN_H15
--operation mode is output

Address[10] = OUTPUT(A1L45);


--Address[11] is Address[11] at PIN_H16
--operation mode is output

Address[11] = OUTPUT(A1L47);


--Xout[0] is Xout[0] at PIN_C17
--operation mode is output

Xout[0] = OUTPUT(P2L1);


--Xout[1] is Xout[1] at PIN_F18
--operation mode is output

Xout[1] = OUTPUT(P2L3);


--Xout[2] is Xout[2] at PIN_J26
--operation mode is output

Xout[2] = OUTPUT(P2L5);


--Xout[3] is Xout[3] at PIN_F17
--operation mode is output

Xout[3] = OUTPUT(P2L7);


--Xout[4] is Xout[4] at PIN_A18
--operation mode is output

Xout[4] = OUTPUT(P2L9);


--Xout[5] is Xout[5] at PIN_K21
--operation mode is output

Xout[5] = OUTPUT(P2L11);


--Xout[6] is Xout[6] at PIN_B18
--operation mode is output

Xout[6] = OUTPUT(P2L13);


--Xout[7] is Xout[7] at PIN_AA16
--operation mode is output

Xout[7] = OUTPUT(P2L15);


--Yout[0] is Yout[0] at PIN_G15
--operation mode is output

Yout[0] = OUTPUT(Q2L1);


--Yout[1] is Yout[1] at PIN_G16
--operation mode is output

Yout[1] = OUTPUT(Q2L3);


--Yout[2] is Yout[2] at PIN_AE19
--operation mode is output

Yout[2] = OUTPUT(Q2L5);


--Yout[3] is Yout[3] at PIN_W15
--operation mode is output

Yout[3] = OUTPUT(Q2L7);


--Yout[4] is Yout[4] at PIN_D17
--operation mode is output

Yout[4] = OUTPUT(Q2L9);


--Yout[5] is Yout[5] at PIN_F16
--operation mode is output

Yout[5] = OUTPUT(Q2L11);


--Yout[6] is Yout[6] at PIN_N23
--operation mode is output

Yout[6] = OUTPUT(Q2L13);


--Color[0] is Color[0] at PIN_B15
--operation mode is output

Color[0] = OUTPUT(DataIn[0]);


--Color[1] is Color[1] at PIN_C11
--operation mode is output

Color[1] = OUTPUT(DataIn[1]);


--Color[2] is Color[2] at PIN_B12
--operation mode is output

Color[2] = OUTPUT(DataIn[2]);


--Color[3] is Color[3] at PIN_J10
--operation mode is output

Color[3] = OUTPUT(DataIn[3]);


--Color[4] is Color[4] at PIN_F20
--operation mode is output

Color[4] = OUTPUT(DataIn[4]);


--Color[5] is Color[5] at PIN_B19
--operation mode is output

Color[5] = OUTPUT(DataIn[5]);


--Color[6] is Color[6] at PIN_AA13
--operation mode is output

Color[6] = OUTPUT(DataIn[6]);


--Color[7] is Color[7] at PIN_G14
--operation mode is output

Color[7] = OUTPUT(DataIn[7]);


--Color[8] is Color[8] at PIN_D14
--operation mode is output

Color[8] = OUTPUT(DataIn[8]);


--Done is Done at PIN_AD16
--operation mode is output

Done = OUTPUT(Q.IDLE);


--VGA_Draw is VGA_Draw at PIN_A14
--operation mode is output

VGA_Draw = OUTPUT(A1L157);


--Sprite[0] is Sprite[0] at PIN_B8
--operation mode is input

Sprite[0] = INPUT();


--Sprite[1] is Sprite[1] at PIN_AE10
--operation mode is input

Sprite[1] = INPUT();


--Sprite[2] is Sprite[2] at PIN_K26
--operation mode is input

Sprite[2] = INPUT();


--Xin[0] is Xin[0] at PIN_L20
--operation mode is input

Xin[0] = INPUT();


--Xin[1] is Xin[1] at PIN_K18
--operation mode is input

Xin[1] = INPUT();


--Xin[2] is Xin[2] at PIN_Y16
--operation mode is input

Xin[2] = INPUT();


--Xin[3] is Xin[3] at PIN_D19
--operation mode is input

Xin[3] = INPUT();


--Xin[4] is Xin[4] at PIN_J25
--operation mode is input

Xin[4] = INPUT();


--Xin[5] is Xin[5] at PIN_AF18
--operation mode is input

Xin[5] = INPUT();


--Xin[6] is Xin[6] at PIN_L21
--operation mode is input

Xin[6] = INPUT();


--Xin[7] is Xin[7] at PIN_E18
--operation mode is input

Xin[7] = INPUT();


--Yin[0] is Yin[0] at PIN_AC16
--operation mode is input

Yin[0] = INPUT();


--Yin[1] is Yin[1] at PIN_AB18
--operation mode is input

Yin[1] = INPUT();


--Yin[2] is Yin[2] at PIN_AD17
--operation mode is input

Yin[2] = INPUT();


--Yin[3] is Yin[3] at PIN_AE17
--operation mode is input

Yin[3] = INPUT();


--Yin[4] is Yin[4] at PIN_H17
--operation mode is input

Yin[4] = INPUT();


--Yin[5] is Yin[5] at PIN_AC17
--operation mode is input

Yin[5] = INPUT();


--Yin[6] is Yin[6] at PIN_AF17
--operation mode is input

Yin[6] = INPUT();


--DataIn[0] is DataIn[0] at PIN_F14
--operation mode is input

DataIn[0] = INPUT();


--DataIn[1] is DataIn[1] at PIN_B11
--operation mode is input

DataIn[1] = INPUT();


--DataIn[2] is DataIn[2] at PIN_B14
--operation mode is input

DataIn[2] = INPUT();


--DataIn[3] is DataIn[3] at PIN_C12
--operation mode is input

DataIn[3] = INPUT();


--DataIn[4] is DataIn[4] at PIN_E22
--operation mode is input

DataIn[4] = INPUT();


--DataIn[5] is DataIn[5] at PIN_A19
--operation mode is input

DataIn[5] = INPUT();


--DataIn[6] is DataIn[6] at PIN_AC14
--operation mode is input

DataIn[6] = INPUT();


--DataIn[7] is DataIn[7] at PIN_F13
--operation mode is input

DataIn[7] = INPUT();


--DataIn[8] is DataIn[8] at PIN_G13
--operation mode is input

DataIn[8] = INPUT();


--Clock is Clock at PIN_P2
--operation mode is input

Clock = INPUT();


--Resetn is Resetn at PIN_AB15
--operation mode is input

Resetn = INPUT();


--Height[0] is Height[0] at PIN_L23
--operation mode is input

Height[0] = INPUT();


--Height[1] is Height[1] at PIN_AE16
--operation mode is input

Height[1] = INPUT();


--Height[2] is Height[2] at PIN_L25
--operation mode is input

Height[2] = INPUT();


--Height[3] is Height[3] at PIN_B16
--operation mode is input

Height[3] = INPUT();


--Height[4] is Height[4] at PIN_AC15
--operation mode is input

Height[4] = INPUT();


--Width[0] is Width[0] at PIN_D16
--operation mode is input

Width[0] = INPUT();


--Width[1] is Width[1] at PIN_E15
--operation mode is input

Width[1] = INPUT();


--Width[2] is Width[2] at PIN_C15
--operation mode is input

Width[2] = INPUT();


--Width[3] is Width[3] at PIN_AA15
--operation mode is input

Width[3] = INPUT();


--Width[4] is Width[4] at PIN_C16
--operation mode is input

Width[4] = INPUT();


--Enable is Enable at PIN_W16
--operation mode is input

Enable = INPUT();


--AnimStep[0] is AnimStep[0] at PIN_L24
--operation mode is input

AnimStep[0] = INPUT();


--AnimStep[1] is AnimStep[1] at PIN_M5
--operation mode is input

AnimStep[1] = INPUT();


--AnimStep[2] is AnimStep[2] at PIN_AA14
--operation mode is input

AnimStep[2] = INPUT();





--A1L91 is Clock~clkctrl at CLKCTRL_G3
A1L91 = cycloneii_clkctrl(.INCLK[0] = Clock) WITH (clock_type = "Global Clock");


--C2L5 is nBitRegister:YOffsetReg|Q[0]~SCLR_LUT at LCCOMB_X40_Y23_N8
C2L5 = C2L3 & !A1L149;


--C2L10 is nBitRegister:YOffsetReg|Q[1]~SCLR_LUT at LCCOMB_X40_Y23_N2
C2L10 = C2L8 & !A1L149;


--C2L15 is nBitRegister:YOffsetReg|Q[2]~SCLR_LUT at LCCOMB_X40_Y23_N4
C2L15 = !A1L149 & C2L13;


--C2L20 is nBitRegister:YOffsetReg|Q[3]~SCLR_LUT at LCCOMB_X40_Y23_N14
C2L20 = C2L18 & !A1L149;


--C2L25 is nBitRegister:YOffsetReg|Q[4]~SCLR_LUT at LCCOMB_X40_Y23_N16
C2L25 = !A1L149 & C2L23;


--C2L30 is nBitRegister:YOffsetReg|Q[5]~SCLR_LUT at LCCOMB_X40_Y23_N10
C2L30 = !A1L149 & C2L28;


--C2L35 is nBitRegister:YOffsetReg|Q[6]~SCLR_LUT at LCCOMB_X40_Y23_N12
C2L35 = !A1L149 & C2L33;


