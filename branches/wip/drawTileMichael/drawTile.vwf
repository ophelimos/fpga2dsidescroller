/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2007 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 50000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Address[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address";
}

SIGNAL("Address[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address";
}

SIGNAL("Address[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address";
}

SIGNAL("Address[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address";
}

SIGNAL("Address[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address";
}

SIGNAL("Address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address";
}

SIGNAL("Address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address";
}

SIGNAL("Address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address";
}

SIGNAL("Address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address";
}

SIGNAL("Address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Address";
}

SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Color")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Color[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Color";
}

SIGNAL("Color[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Color";
}

SIGNAL("Color[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Color";
}

SIGNAL("Color[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Color";
}

SIGNAL("Color[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Color";
}

SIGNAL("Color[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Color";
}

SIGNAL("Color[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Color";
}

SIGNAL("Color[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Color";
}

SIGNAL("Color[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Color";
}

SIGNAL("DataIn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DataIn[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataIn";
}

SIGNAL("DataIn[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataIn";
}

SIGNAL("DataIn[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataIn";
}

SIGNAL("DataIn[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataIn";
}

SIGNAL("DataIn[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataIn";
}

SIGNAL("DataIn[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataIn";
}

SIGNAL("DataIn[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataIn";
}

SIGNAL("DataIn[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataIn";
}

SIGNAL("DataIn[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataIn";
}

SIGNAL("Done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Resetn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("TileSel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("TileSel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TileSel";
}

SIGNAL("TileSel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TileSel";
}

SIGNAL("TileSel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TileSel";
}

SIGNAL("TileSel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TileSel";
}

SIGNAL("VGA_Draw")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("X")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("X[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "X";
}

SIGNAL("X[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "X";
}

SIGNAL("X[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "X";
}

SIGNAL("X[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "X";
}

SIGNAL("X[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "X";
}

SIGNAL("X[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "X";
}

SIGNAL("X[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "X";
}

SIGNAL("X[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "X";
}

SIGNAL("Xin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Xin[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Xin";
}

SIGNAL("Xin[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Xin";
}

SIGNAL("Xin[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Xin";
}

SIGNAL("Xin[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Xin";
}

SIGNAL("Xin[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Xin";
}

SIGNAL("Xin[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Xin";
}

SIGNAL("Xin[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Xin";
}

SIGNAL("Xin[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Xin";
}

SIGNAL("Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Yin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Yin[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Yin";
}

SIGNAL("Yin[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Yin";
}

SIGNAL("Yin[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Yin";
}

SIGNAL("Yin[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Yin";
}

SIGNAL("Yin[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Yin";
}

SIGNAL("Yin[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Yin";
}

SIGNAL("Yin[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Yin";
}

SIGNAL("D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = COMBINATORIAL;
	PARENT = "";
}

SIGNAL("Q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
}

TRANSITION_LIST("Address[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Address[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Address[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Address[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Address[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Address[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Address[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Address[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Address[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Address[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2500;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("Color[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Color[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Color[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Color[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Color[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Color[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Color[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Color[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Color[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("DataIn[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 38400.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 5200.0;
	}
}

TRANSITION_LIST("DataIn[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 8960.0;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 3840.0;
		LEVEL 0 FOR 20560.0;
	}
}

TRANSITION_LIST("DataIn[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 46160.0;
	}
}

TRANSITION_LIST("DataIn[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 46160.0;
	}
}

TRANSITION_LIST("DataIn[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 29440.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 1360.0;
	}
}

TRANSITION_LIST("DataIn[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 11520.0;
		LEVEL 0 FOR 29520.0;
	}
}

TRANSITION_LIST("DataIn[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 46160.0;
	}
}

TRANSITION_LIST("DataIn[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 6400.0;
		LEVEL 1 FOR 6400.0;
		LEVEL 0 FOR 28160.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 2640.0;
	}
}

TRANSITION_LIST("DataIn[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 29440.0;
		LEVEL 1 FOR 3840.0;
		LEVEL 0 FOR 12880.0;
	}
}

TRANSITION_LIST("Done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50000.0;
	}
}

TRANSITION_LIST("Resetn")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 50000.0;
	}
}

TRANSITION_LIST("TileSel[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("TileSel[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("TileSel[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("TileSel[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("VGA_Draw")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("X[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("X[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("X[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("X[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("X[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("X[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("X[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("X[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Xin[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Xin[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Xin[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Xin[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Xin[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Xin[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Xin[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Xin[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Y[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Y[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Y[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Y[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Y[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Y[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Y[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 50000.0;
	}
}

TRANSITION_LIST("Yin[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Yin[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Yin[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Yin[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Yin[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Yin[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("Yin[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("D")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 50000.0;
	}
}

TRANSITION_LIST("Q")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 50000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "Address[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Color";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "Color[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Color[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Color[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Color[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Color[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Color[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Color[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Color[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Color[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "DataIn";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "DataIn[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "DataIn[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "DataIn[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "DataIn[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "DataIn[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "DataIn[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "DataIn[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "DataIn[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "DataIn[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Resetn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "TileSel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39;
}

DISPLAY_LINE
{
	CHANNEL = "TileSel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "TileSel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "TileSel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "TileSel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "VGA_Draw";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "X";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
	CHILDREN = 42, 43, 44, 45, 46, 47, 48, 49;
}

DISPLAY_LINE
{
	CHANNEL = "X[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "X[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "X[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "X[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "X[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "X[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "X[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "X[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 41;
}

DISPLAY_LINE
{
	CHANNEL = "Xin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
	CHILDREN = 51, 52, 53, 54, 55, 56, 57, 58;
}

DISPLAY_LINE
{
	CHANNEL = "Xin[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "Xin[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "Xin[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "Xin[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "Xin[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "Xin[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "Xin[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "Xin[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "Y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
	CHILDREN = 60, 61, 62, 63, 64, 65, 66;
}

DISPLAY_LINE
{
	CHANNEL = "Y[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Y[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Y[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Y[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Y[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Y[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Y[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "Yin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
	CHILDREN = 68, 69, 70, 71, 72, 73, 74;
}

DISPLAY_LINE
{
	CHANNEL = "Yin[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "Yin[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "Yin[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "Yin[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "Yin[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "Yin[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "Yin[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 75;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 76;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 22025;
	MASTER = TRUE;
}
;
