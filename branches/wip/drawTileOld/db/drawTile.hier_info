|drawTile
draw => Mux0.IN3
drawDone <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
plot <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
clock => clock~0.IN2
resetn => y_Q[2]~reg0.ACLR
resetn => y_Q[1]~reg0.ACLR
resetn => y_Q[0]~reg0.ACLR
draw_x[0] <= counter3b:draw_counterx.q
draw_x[1] <= counter3b:draw_counterx.q
draw_x[2] <= counter3b:draw_counterx.q
draw_y[0] <= counter4b:draw_countery.q
draw_y[1] <= counter4b:draw_countery.q
draw_y[2] <= counter4b:draw_countery.q
draw_y[3] <= counter4b:draw_countery.q
y_D[0] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
y_D[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
y_D[2] <= <GND>
y_Q[0] <= y_Q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_Q[1] <= y_Q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
y_Q[2] <= y_Q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|drawTile|counter3b:draw_counterx
clock => clock~0.IN1
cnt_en => cnt_en~0.IN1
sclr => sclr~0.IN1
q[0] <= lpm_counter:lpm_counter_component.q
q[1] <= lpm_counter:lpm_counter_component.q
q[2] <= lpm_counter:lpm_counter_component.q


|drawTile|counter3b:draw_counterx|lpm_counter:lpm_counter_component
clock => cntr_2oi:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_2oi:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_2oi:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_2oi:auto_generated.q[0]
q[1] <= cntr_2oi:auto_generated.q[1]
q[2] <= cntr_2oi:auto_generated.q[2]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|drawTile|counter3b:draw_counterx|lpm_counter:lpm_counter_component|cntr_2oi:auto_generated
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT


|drawTile|counter4b:draw_countery
clock => clock~0.IN1
cnt_en => cnt_en~0.IN1
sclr => sclr~0.IN1
q[0] <= lpm_counter:lpm_counter_component.q
q[1] <= lpm_counter:lpm_counter_component.q
q[2] <= lpm_counter:lpm_counter_component.q
q[3] <= lpm_counter:lpm_counter_component.q


|drawTile|counter4b:draw_countery|lpm_counter:lpm_counter_component
clock => cntr_3oi:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_3oi:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_3oi:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_3oi:auto_generated.q[0]
q[1] <= cntr_3oi:auto_generated.q[1]
q[2] <= cntr_3oi:auto_generated.q[2]
q[3] <= cntr_3oi:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|drawTile|counter4b:draw_countery|lpm_counter:lpm_counter_component|cntr_3oi:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT


